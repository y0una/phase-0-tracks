/////////////////
Release 2: Execute SQL Queries

empHealthInsurance.db

1.Display the information in one table (either table is fine)

SELECT * FROM Employees;
1|Janet Chang|1|3
2|Max Miller|2|1
3|Luke Goldberg|0|2
4|Linda Patel|1|2
5|Charles Young|2|4

2. Update an item that meets some condition (you can choose a condition that makes sense).

UPDATE Employees SET Insurance=3 WHERE Name="Linda Patel";

3. Display the information in both tables using one query.

SELECT * FROM Employees, InsuranceOptions WHERE InsuranceOptions.Id = Employees.id

1|Janet Chang|1|3|1|Anthem
2|Max Miller|2|1|2|Blue Cross Blue Shield
3|Luke Goldberg|0|2|3|HealthNet
4|Linda Patel|1|3|4|UnitedHealth

4. Display a narrower selection of columns (fewer columns than all of them, in other words) from both tables using one query.

SELECT Employees.name, InsuranceOptions.name FROM Employees JOIN InsuranceOptions ON Employees.id = InsuranceOptions.id;
Janet Chang|Anthem
Max Miller|Blue Cross Blue Shield
Luke Goldberg|HealthNet
Linda Patel|UnitedHealth

5. Delete an item that meets some condition (you can choose a condition that makes sense).

DELETE FROM Employees WHERE Name="Luke Goldberg";
SELECT * FROM Employees
1|Janet Chang|1|3
2|Max Miller|2|1
4|Linda Patel|1|3
5|Charles Young|2|4

/////////////////
Release 3: Research on your Own

1a.) There are lots of different kinds of joins. What are they? Can you apply different conditions to a join to change what's displayed?

CROSS OR CARTESAIN JOIN
- returns ALL rows not just matches
SELECT * FROM Faculty CROSS JOIN Dept;
SELECT * FROM Employees CROSS JOIN InsuranceOptions;

INNERJOIN is a default join type (note INNERJOIN & JOIN do the same thing)
- returns rows where there is at least one match in both tables
SELECT *
FROM Employees INNER JOIN InsuranceOptions
ON Employees.Insurance = InsuranceOptions.Id;

RIGHT JOIN
- return all rows from the right table (InsuranceOptions) even if there are no matches in the left table (Employees)
SELECT *
FROM Employees RIGHTJOIN InsuranceOptions
ON Employees.Insurance = InsuranceOptions.Id;

LEFT JOIN
- returns all row sform the left table (Insurance) even if there ar no matche sin the right table (Dept table)
SELECT *
FROM Employees LEFT JOIN InsuranceOptions
ON Employees.Insurance = InsuranceOptions.Id;


1b.) Can you bookmark any good diagrams that will help you tell different joins apart in the future?
https://blog.codinghorror.com/a-visual-explanation-of-sql-joins/
http://www.codeproject.com/Articles/33052/Visual-Representation-of-SQL-Joins

2. Try a few different joins in your database, and record the commands and the output in queries.txt.

INNER JOIN
SELECT *
FROM Employees INNER JOIN InsuranceOptions
ON Employees.Insurance = InsuranceOptions.Id;
RESULTS
1|Janet Chang|1|3|3|HealthNet
2|Max Miller|2|1|1|Anthem
4|Linda Patel|1|3|3|HealthNet
5|Charles Young|2|4|4|UnitedHealth

CROSS JOIN
SELECT * FROM Faculty CROSS JOIN Dept;
SELECT * FROM Employees CROSS JOIN InsuranceOptions;
RESULTS
1|Janet Chang|1|3|3|HealthNet
2|Max Miller|2|1|1|Anthem
4|Linda Patel|1|3|3|HealthNet
5|Charles Young|2|4|4|UnitedHealth
sqlite> SELECT * FROM Faculty CROSS JOIN Dept;
Error: no such table: Faculty
sqlite> SELECT * FROM Employees CROSS JOIN InsuranceOptions;
1|Janet Chang|1|3|1|Anthem
1|Janet Chang|1|3|2|Blue Cross Blue Shield
1|Janet Chang|1|3|3|HealthNet
1|Janet Chang|1|3|4|UnitedHealth
2|Max Miller|2|1|1|Anthem
2|Max Miller|2|1|2|Blue Cross Blue Shield
2|Max Miller|2|1|3|HealthNet
2|Max Miller|2|1|4|UnitedHealth
4|Linda Patel|1|3|1|Anthem
4|Linda Patel|1|3|2|Blue Cross Blue Shield
4|Linda Patel|1|3|3|HealthNet
4|Linda Patel|1|3|4|UnitedHealth
5|Charles Young|2|4|1|Anthem
5|Charles Young|2|4|2|Blue Cross Blue Shield
5|Charles Young|2|4|3|HealthNet
5|Charles Young|2|4|4|UnitedHealth

LEFT JOIN
SELECT *
FROM Employees LEFT JOIN InsuranceOptions
ON Employees.Insurance = InsuranceOptions.Id;
RESULTS
1|Janet Chang|1|3|3|HealthNet
2|Max Miller|2|1|1|Anthem
4|Linda Patel|1|3|3|HealthNet
5|Charles Young|2|4|4|UnitedHealth